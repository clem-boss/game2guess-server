declare const LinkType: {
    readonly Document: "Link.document";
    readonly File: "Link.file";
    readonly Image: "Link.image";
    readonly Web: "Link.web";
};
/**
 * Represents a link field without a value.
 */
declare type EmptyLinkField = null;
/**
 * Link that point to Documents
 */
interface FilledMinimalLinkToDocumentField {
    _linkType: typeof LinkType.Document | string;
}
/**
 * Link that points to external website
 */
interface FilledMinimalLinkToWebField {
    _linkType: typeof LinkType.Web | string;
    url: string;
}
/**
 * Link that points to media (images, PDFs, or any file in the Media Library)
 */
interface FilledMinimalLinkToMediaField {
    _linkType: typeof LinkType.File | typeof LinkType.Image | string;
    url: string;
}
/**
 * Field for related documents
 */
declare type RelationField<ExtendedLinkToDocumentField extends FilledMinimalLinkToWebField = FilledMinimalLinkToWebField, IsEmpty extends boolean = boolean> = IsEmpty extends true ? EmptyLinkField : ExtendedLinkToDocumentField;
/**
 * Link Field
 */
declare type LinkField<ExtendedLinkToDocumentField extends FilledMinimalLinkToDocumentField = FilledMinimalLinkToDocumentField, ExtendedLinkToWebField extends FilledMinimalLinkToWebField = FilledMinimalLinkToWebField, ExtendedLinkToMediaField extends FilledMinimalLinkToMediaField = FilledMinimalLinkToMediaField, IsEmpty extends boolean = boolean> = IsEmpty extends true ? EmptyLinkField : ExtendedLinkToDocumentField | ExtendedLinkToWebField | ExtendedLinkToMediaField;
/**
 * Link field that points to media
 */
declare type LinkToMediaField<ExtendedLinkToMediaField extends FilledMinimalLinkToMediaField = FilledMinimalLinkToMediaField, IsEmpty extends boolean = boolean> = IsEmpty extends true ? EmptyLinkField : ExtendedLinkToMediaField;

export { EmptyLinkField, FilledMinimalLinkToDocumentField, FilledMinimalLinkToMediaField, FilledMinimalLinkToWebField, LinkField, LinkToMediaField, LinkType, RelationField };
//# sourceMappingURL=index.d.ts.map
